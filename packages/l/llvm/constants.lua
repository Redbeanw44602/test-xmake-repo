constants = {}

--- from llvm/CMakeLists.txt

function constants.get_llvm_all_projects()
    return {
        "bolt",
        "clang",
        "clang-tools-extra",
        "compiler-rt",
        "libc",
        "libclc",
        "lld",
        "lldb",
        "mlir",
        "openmp",
        "polly",
        "pstl"
    }
end

function constants.get_llvm_extra_projects()
    return {
        "flang"
    }
end

function constants.get_llvm_known_projects()
    return table.join(constants.get_llvm_all_projects(), constants.get_llvm_extra_projects())
end

--- from cmake/llvm/LLVMConfig.cmake

function constants.get_llvm_shared_libraries()
    return {
        "LLVM"
    }
end

function constants.get_llvm_static_libraries()
    return {
        "LLVMDemangle",
        "LLVMSupport",
        "LLVMTableGen",
        "LLVMTableGenBasic",
        "LLVMTableGenCommon",
        "LLVMCore",
        "LLVMFuzzerCLI",
        "LLVMFuzzMutate",
        "LLVMFileCheck",
        "LLVMInterfaceStub",
        "LLVMIRPrinter",
        "LLVMIRReader",
        "LLVMCodeGen",
        "LLVMSelectionDAG",
        "LLVMAsmPrinter",
        "LLVMMIRParser",
        "LLVMGlobalISel",
        "LLVMCodeGenData",
        "LLVMCodeGenTypes",
        "LLVMBinaryFormat",
        "LLVMBitReader",
        "LLVMBitWriter",
        "LLVMBitstreamReader",
        "LLVMDWARFLinker",
        "LLVMDWARFLinkerClassic",
        "LLVMDWARFLinkerParallel",
        "LLVMExtensions",
        "LLVMFrontendDriver",
        "LLVMFrontendHLSL",
        "LLVMFrontendOpenACC",
        "LLVMFrontendOpenMP",
        "LLVMFrontendOffloading",
        "LLVMTransformUtils",
        "LLVMInstrumentation",
        "LLVMAggressiveInstCombine",
        "LLVMInstCombine",
        "LLVMScalarOpts",
        "LLVMipo",
        "LLVMVectorize",
        "LLVMObjCARCOpts",
        "LLVMCoroutines",
        "LLVMCFGuard",
        "LLVMHipStdPar",
        "LLVMLinker",
        "LLVMAnalysis",
        "LLVMLTO",
        "LLVMMC",
        "LLVMMCParser",
        "LLVMMCDisassembler",
        "LLVMMCA",
        "LLVMObjCopy",
        "LLVMObject",
        "LLVMObjectYAML",
        "LLVMOption",
        "LLVMRemarks",
        "LLVMDebuginfod",
        "LLVMDebugInfoDWARF",
        "LLVMDebugInfoGSYM",
        "LLVMDebugInfoLogicalView",
        "LLVMDebugInfoMSF",
        "LLVMDebugInfoCodeView",
        "LLVMDebugInfoPDB",
        "LLVMSymbolize",
        "LLVMDebugInfoBTF",
        "LLVMDWP",
        "LLVMExecutionEngine",
        "LLVMInterpreter",
        "LLVMJITLink",
        "LLVMMCJIT",
        "LLVMOrcJIT",
        "LLVMOrcDebugging",
        "LLVMOrcShared",
        "LLVMOrcTargetProcess",
        "LLVMRuntimeDyld",
        "LLVMTarget",
        "LLVMAArch64CodeGen",
        "LLVMAArch64AsmParser",
        "LLVMAArch64Disassembler",
        "LLVMAArch64Desc",
        "LLVMAArch64Info",
        "LLVMAArch64Utils",
        "LLVMAMDGPUCodeGen",
        "LLVMAMDGPUAsmParser",
        "LLVMAMDGPUDisassembler",
        "LLVMAMDGPUTargetMCA",
        "LLVMAMDGPUDesc",
        "LLVMAMDGPUInfo",
        "LLVMAMDGPUUtils",
        "LLVMARMCodeGen",
        "LLVMARMAsmParser",
        "LLVMARMDisassembler",
        "LLVMARMDesc",
        "LLVMARMInfo",
        "LLVMARMUtils",
        "LLVMAVRCodeGen",
        "LLVMAVRAsmParser",
        "LLVMAVRDisassembler",
        "LLVMAVRDesc",
        "LLVMAVRInfo",
        "LLVMBPFCodeGen",
        "LLVMBPFAsmParser",
        "LLVMBPFDisassembler",
        "LLVMBPFDesc",
        "LLVMBPFInfo",
        "LLVMHexagonCodeGen",
        "LLVMHexagonAsmParser",
        "LLVMHexagonDisassembler",
        "LLVMHexagonDesc",
        "LLVMHexagonInfo",
        "LLVMLanaiCodeGen",
        "LLVMLanaiAsmParser",
        "LLVMLanaiDisassembler",
        "LLVMLanaiDesc",
        "LLVMLanaiInfo",
        "LLVMLoongArchCodeGen",
        "LLVMLoongArchAsmParser",
        "LLVMLoongArchDisassembler",
        "LLVMLoongArchDesc",
        "LLVMLoongArchInfo",
        "LLVMMipsCodeGen",
        "LLVMMipsAsmParser",
        "LLVMMipsDisassembler",
        "LLVMMipsDesc",
        "LLVMMipsInfo",
        "LLVMMSP430CodeGen",
        "LLVMMSP430Desc",
        "LLVMMSP430Info",
        "LLVMMSP430AsmParser",
        "LLVMMSP430Disassembler",
        "LLVMNVPTXCodeGen",
        "LLVMNVPTXDesc",
        "LLVMNVPTXInfo",
        "LLVMPowerPCCodeGen",
        "LLVMPowerPCAsmParser",
        "LLVMPowerPCDisassembler",
        "LLVMPowerPCDesc",
        "LLVMPowerPCInfo",
        "LLVMRISCVCodeGen",
        "LLVMRISCVAsmParser",
        "LLVMRISCVDisassembler",
        "LLVMRISCVDesc",
        "LLVMRISCVTargetMCA",
        "LLVMRISCVInfo",
        "LLVMSparcCodeGen",
        "LLVMSparcAsmParser",
        "LLVMSparcDisassembler",
        "LLVMSparcDesc",
        "LLVMSparcInfo",
        "LLVMSystemZCodeGen",
        "LLVMSystemZAsmParser",
        "LLVMSystemZDisassembler",
        "LLVMSystemZDesc",
        "LLVMSystemZInfo",
        "LLVMVECodeGen",
        "LLVMVEAsmParser",
        "LLVMVEDisassembler",
        "LLVMVEInfo",
        "LLVMVEDesc",
        "LLVMWebAssemblyCodeGen",
        "LLVMWebAssemblyAsmParser",
        "LLVMWebAssemblyDisassembler",
        "LLVMWebAssemblyDesc",
        "LLVMWebAssemblyInfo",
        "LLVMWebAssemblyUtils",
        "LLVMX86CodeGen",
        "LLVMX86AsmParser",
        "LLVMX86Disassembler",
        "LLVMX86TargetMCA",
        "LLVMX86Desc",
        "LLVMX86Info",
        "LLVMXCoreCodeGen",
        "LLVMXCoreDisassembler",
        "LLVMXCoreDesc",
        "LLVMXCoreInfo",
        "LLVMSandboxIR",
        "LLVMAsmParser",
        "LLVMLineEditor",
        "LLVMProfileData",
        "LLVMCoverage",
        "LLVMPasses",
        "LLVMTargetParser",
        "LLVMTextAPI",
        "LLVMTextAPIBinaryReader",
        "LLVMDlltoolDriver",
        "LLVMLibDriver",
        "LLVMXRay",
        "LLVMWindowsDriver",
        "LLVMWindowsManifest",
        "LTO",
        "LLVMBOLTCore",
        "LLVMBOLTPasses",
        "LLVMBOLTProfile",
        "LLVMBOLTRewrite",
        "LLVMBOLTRuntimeLibs",
        "LLVMBOLTTargetAArch64",
        "LLVMBOLTTargetX86",
        "LLVMBOLTTargetRISCV",
        "LLVMBOLTUtils",
        "LLVMCFIVerify",
        "LLVMDiff",
        "LLVMExegesisX86",
        "LLVMExegesisAArch64",
        "LLVMExegesisPowerPC",
        "LLVMExegesisMips",
        "LLVMExegesis",
        "LLVMOptDriver",
        "Remarks",
        "Polly"
    }
end

--- from cmake/clang/ClangConfig.cmake

function constants.get_clang_shared_libraries()
    return {
        "clang",
        "clang-cpp"
    }
end

function constants.get_clang_static_libraries()
    return {
        "clangBasic",
        "clangAPINotes",
        "clangLex",
        "clangParse",
        "clangAST",
        "clangDynamicASTMatchers",
        "clangASTMatchers",
        "clangCrossTU",
        "clangSema",
        "clangCodeGen",
        "clangAnalysis",
        "clangAnalysisFlowSensitive",
        "clangAnalysisFlowSensitiveModels",
        "clangEdit",
        "clangExtractAPI",
        "clangRewrite",
        "clangARCMigrate",
        "clangDriver",
        "clangSerialization",
        "clangRewriteFrontend",
        "clangFrontend",
        "clangFrontendTool",
        "clangToolingCore",
        "clangToolingInclusions",
        "clangToolingInclusionsStdlib",
        "clangToolingRefactoring",
        "clangToolingASTDiff",
        "clangToolingSyntax",
        "clangDependencyScanning",
        "clangTransformer",
        "clangTooling",
        "clangDirectoryWatcher",
        "clangIndex",
        "clangIndexSerialization",
        "clangInstallAPI",
        "clangStaticAnalyzerCore",
        "clangStaticAnalyzerCheckers",
        "clangStaticAnalyzerFrontend",
        "clangFormat",
        "clangInterpreter",
        "clangSupport",
        "clangHandleCXX",
        "clangHandleLLVM",
        "clangApplyReplacements",
        "clangReorderFields",
        "clangTidy",
        "clangTidyAndroidModule",
        "clangTidyAbseilModule",
        "clangTidyAlteraModule",
        "clangTidyBoostModule",
        "clangTidyBugproneModule",
        "clangTidyCERTModule",
        "clangTidyConcurrencyModule",
        "clangTidyCppCoreGuidelinesModule",
        "clangTidyDarwinModule",
        "clangTidyFuchsiaModule",
        "clangTidyGoogleModule",
        "clangTidyHICPPModule",
        "clangTidyLinuxKernelModule",
        "clangTidyLLVMModule",
        "clangTidyLLVMLibcModule",
        "clangTidyMiscModule",
        "clangTidyModernizeModule",
        "clangTidyMPIModule",
        "clangTidyObjCModule",
        "clangTidyOpenMPModule",
        "clangTidyPerformanceModule",
        "clangTidyPortabilityModule",
        "clangTidyReadabilityModule",
        "clangTidyZirconModule",
        "clangTidyPlugin",
        "clangTidyMain",
        "clangTidyUtils",
        "clangChangeNamespace",
        "clangDoc",
        "clangIncludeFixer",
        "clangIncludeFixerPlugin",
        "findAllSymbols",
        "clangMove",
        "clangQuery",
        "clang-query",
        "clangIncludeCleaner",
        "clangPseudoCLI",
        "clangPseudoCXX",
        "clangPseudoGrammar",
        "clangPseudo",
        "clangdSupport",
        "clangDaemon",
        "clangDaemonTweaks",
        "clangdMain",
        "clangd",
        "clangdRemoteIndex"
    }
end

--- from cmake/flang/FlangConfig.cmake

function constants.get_flang_shared_libraries()
    return {} -- TODO
end

function constants.get_flang_static_libraries()
    return {
        "FortranCommon",
        "FortranEvaluate",
        "FortranDecimal",
        "FortranLower",
        "FortranParser",
        "FortranSemantics",
        "flangFrontend",
        "flangFrontendTool",
        "FIRBuilder",
        "FIRCodeGen",
        "FIRDialectSupport",
        "CUFAttrs",
        "CUFDialect",
        "FIRDialect",
        "HLFIRDialect",
        "HLFIRTransforms",
        "FIRSupport",
        "FIRTransforms",
        "FIRAnalysis"
    }
end

--- from cmake/llvm/mlir/MLIRConfig.cmake

function constants.get_mlir_shared_libraries()
    return {} -- TODO
end

function constants.get_mlir_static_libraries()
    return {
        "MLIRPresburger",
        "MLIRAnalysis",
        "MLIRAsmParser",
        "MLIRBytecodeReader",
        "MLIRBytecodeWriter",
        "MLIRBytecodeOpInterface",
        "MLIRAffineToStandard",
        "MLIRAMDGPUToROCDL",
        "MLIRArithAttrToLLVMConversion",
        "MLIRArithToAMDGPU",
        "MLIRArithToArmSME",
        "MLIRArithToEmitC",
        "MLIRArithToLLVM",
        "MLIRArithToSPIRV",
        "MLIRArmNeon2dToIntr",
        "MLIRArmSMEToSCF",
        "MLIRArmSMEToLLVM",
        "MLIRAsyncToLLVM",
        "MLIRBufferizationToMemRef",
        "MLIRComplexToLibm",
        "MLIRComplexToLLVM",
        "MLIRComplexToSPIRV",
        "MLIRComplexToStandard",
        "MLIRControlFlowToLLVM",
        "MLIRControlFlowToSCF",
        "MLIRControlFlowToSPIRV",
        "MLIRConvertToLLVMInterface",
        "MLIRConvertToLLVMPass",
        "MLIRConvertToSPIRVPass",
        "MLIRFuncToEmitC",
        "MLIRFuncToLLVM",
        "MLIRFuncToSPIRV",
        "MLIRGPUToGPURuntimeTransforms",
        "MLIRGPUToLLVMSPV",
        "MLIRGPUToNVVMTransforms",
        "MLIRGPUToROCDLTransforms",
        "MLIRGPUToSPIRV",
        "MLIRGPUToVulkanTransforms",
        "MLIRIndexToLLVM",
        "MLIRIndexToSPIRV",
        "MLIRLinalgToStandard",
        "MLIRLLVMCommonConversion",
        "MLIRMathToFuncs",
        "MLIRMathToLibm",
        "MLIRMathToLLVM",
        "MLIRMathToROCDL",
        "MLIRMathToSPIRV",
        "MLIRMemRefToEmitC",
        "MLIRMemRefToLLVM",
        "MLIRMemRefToSPIRV",
        "MLIRNVGPUToNVVM",
        "MLIRNVVMToLLVM",
        "MLIROpenACCToSCF",
        "MLIROpenMPToLLVM",
        "MLIRPDLToPDLInterp",
        "MLIRReconcileUnrealizedCasts",
        "MLIRSCFToControlFlow",
        "MLIRSCFToEmitC",
        "MLIRSCFToGPU",
        "MLIRSCFToOpenMP",
        "MLIRSCFToSPIRV",
        "MLIRShapeToStandard",
        "MLIRSPIRVToLLVM",
        "MLIRTensorToLinalg",
        "MLIRTensorToSPIRV",
        "MLIRTosaToArith",
        "MLIRTosaToLinalg",
        "MLIRTosaToMLProgram",
        "MLIRTosaToSCF",
        "MLIRTosaToTensor",
        "MLIRUBToLLVM",
        "MLIRUBToSPIRV",
        "MLIRVectorToArmSME",
        "MLIRVectorToGPU",
        "MLIRVectorToLLVM",
        "MLIRVectorToLLVMPass",
        "MLIRVectorToSCF",
        "MLIRVectorToSPIRV",
        "MLIRObservers",
        "MLIRDebug",
        "MLIRAffineAnalysis",
        "MLIRAffineDialect",
        "MLIRAffineTransforms",
        "MLIRAffineTransformOps",
        "MLIRAffineUtils",
        "MLIRAMDGPUDialect",
        "MLIRAMDGPUTransforms",
        "MLIRAMDGPUUtils",
        "MLIRAMXDialect",
        "MLIRAMXTransforms",
        "MLIRArithDialect",
        "MLIRArithValueBoundsOpInterfaceImpl",
        "MLIRArithTransforms",
        "MLIRArithUtils",
        "MLIRArmNeonDialect",
        "MLIRArmNeonTransforms",
        "MLIRArmSMEDialect",
        "MLIRArmSMETransforms",
        "MLIRArmSVEDialect",
        "MLIRArmSVETransforms",
        "MLIRAsyncDialect",
        "MLIRAsyncTransforms",
        "MLIRBufferizationDialect",
        "MLIRBufferizationPipelines",
        "MLIRBufferizationTransformOps",
        "MLIRBufferizationTransforms",
        "MLIRComplexDialect",
        "MLIRControlFlowDialect",
        "MLIRControlFlowTransforms",
        "MLIRDLTIDialect",
        "MLIREmitCDialect",
        "MLIREmitCTransforms",
        "MLIRFuncInlinerExtension",
        "MLIRFuncMeshShardingExtensions",
        "MLIRFuncAllExtensions",
        "MLIRFuncDialect",
        "MLIRFuncTransforms",
        "MLIRFuncTransformOps",
        "MLIRGPUDialect",
        "MLIRGPUTransforms",
        "MLIRGPUTransformOps",
        "MLIRGPUPipelines",
        "MLIRIndexDialect",
        "MLIRIRDL",
        "MLIRLinalgDialect",
        "MLIRLinalgTransformOps",
        "MLIRLinalgTransforms",
        "MLIRLinalgUtils",
        "MLIRLLVMIRTransforms",
        "MLIRLLVMDialect",
        "MLIRNVVMDialect",
        "MLIRROCDLDialect",
        "MLIRVCIXDialect",
        "MLIRMathDialect",
        "MLIRMathTransforms",
        "MLIRMemRefDialect",
        "MLIRMemRefTransformOps",
        "MLIRMemRefTransforms",
        "MLIRMemRefUtils",
        "MLIRShardingInterface",
        "MLIRMeshDialect",
        "MLIRMeshTransforms",
        "MLIRMLProgramDialect",
        "MLIRMLProgramTransforms",
        "MLIRMPIDialect",
        "MLIRNVGPUDialect",
        "MLIRNVGPUUtils",
        "MLIRNVGPUTransformOps",
        "MLIRNVGPUTransforms",
        "MLIROpenACCDialect",
        "MLIROpenACCTransforms",
        "MLIROpenACCMPCommon",
        "MLIROpenMPDialect",
        "MLIRPDLDialect",
        "MLIRPDLInterpDialect",
        "MLIRPolynomialDialect",
        "MLIRPtrDialect",
        "MLIRQuantDialect",
        "MLIRQuantUtils",
        "MLIRSCFDialect",
        "MLIRSCFTransformOps",
        "MLIRSCFTransforms",
        "MLIRSCFUtils",
        "MLIRShapeDialect",
        "MLIRShapeOpsTransforms",
        "MLIRSparseTensorEnums",
        "MLIRSparseTensorDialect",
        "MLIRSparseTensorPipelines",
        "MLIRSparseTensorTransformOps",
        "MLIRSparseTensorTransforms",
        "MLIRSparseTensorUtils",
        "MLIRSPIRVDialect",
        "MLIRSPIRVModuleCombiner",
        "MLIRSPIRVConversion",
        "MLIRSPIRVTransforms",
        "MLIRSPIRVUtils",
        "MLIRTensorDialect",
        "MLIRTensorInferTypeOpInterfaceImpl",
        "MLIRTensorTilingInterfaceImpl",
        "MLIRTensorTransforms",
        "MLIRTensorTransformOps",
        "MLIRTensorUtils",
        "MLIRTosaDialect",
        "MLIRTosaShardingInterfaceImpl",
        "MLIRTosaTransforms",
        "MLIRTransformDebugExtension",
        "MLIRTransformDialectInterfaces",
        "MLIRTransformDialect",
        "MLIRTransformDialectIRDLExtension",
        "MLIRTransformLoopExtension",
        "MLIRTransformPDLExtension",
        "MLIRTransformDialectTransforms",
        "MLIRTransformDialectUtils",
        "MLIRUBDialect",
        "MLIRDialectUtils",
        "MLIRVectorDialect",
        "MLIRMaskableOpInterface",
        "MLIRMaskingOpInterface",
        "MLIRVectorTransforms",
        "MLIRVectorTransformOps",
        "MLIRVectorUtils",
        "MLIRX86VectorDialect",
        "MLIRX86VectorTransforms",
        "MLIRXeGPUDialect",
        "MLIRXeGPUTransforms",
        "MLIRDialect",
        "MLIRIR",
        "MLIRCallInterfaces",
        "MLIRCastInterfaces",
        "MLIRControlFlowInterfaces",
        "MLIRCopyOpInterface",
        "MLIRDataLayoutInterfaces",
        "MLIRDerivedAttributeOpInterface",
        "MLIRDestinationStyleOpInterface",
        "MLIRFunctionInterfaces",
        "MLIRInferIntRangeInterface",
        "MLIRInferTypeOpInterface",
        "MLIRLoopLikeInterface",
        "MLIRMemorySlotInterfaces",
        "MLIRParallelCombiningOpInterface",
        "MLIRRuntimeVerifiableOpInterface",
        "MLIRShapedOpInterfaces",
        "MLIRSideEffectInterfaces",
        "MLIRSubsetOpInterface",
        "MLIRTilingInterface",
        "MLIRVectorInterfaces",
        "MLIRViewLikeInterface",
        "MLIRValueBoundsOpInterface",
        "MLIRInferIntRangeCommon",
        "MLIRParser",
        "MLIRPass",
        "MLIRQuery",
        "MLIRQueryMatcher",
        "MLIRReduce",
        "MLIRRewrite",
        "MLIRRewritePDL",
        "MLIRSupport",
        "MLIRTableGen",
        "MLIRTargetCpp",
        "MLIRSPIRVDeserialization",
        "MLIRSPIRVSerialization",
        "MLIRSPIRVBinaryUtils",
        "MLIRSPIRVTranslateRegistration",
        "MLIRSPIRVTarget",
        "MLIRArmNeonToLLVMIRTranslation",
        "MLIRArmSMEToLLVMIRTranslation",
        "MLIRArmSVEToLLVMIRTranslation",
        "MLIRAMXToLLVMIRTranslation",
        "MLIRBuiltinToLLVMIRTranslation",
        "MLIRGPUToLLVMIRTranslation",
        "MLIRLLVMIRToLLVMTranslation",
        "MLIRLLVMToLLVMIRTranslation",
        "MLIRLLVMIRToNVVMTranslation",
        "MLIRNVVMToLLVMIRTranslation",
        "MLIROpenACCToLLVMIRTranslation",
        "MLIROpenMPToLLVMIRTranslation",
        "MLIRROCDLToLLVMIRTranslation",
        "MLIRSPIRVToLLVMIRTranslation",
        "MLIRVCIXToLLVMIRTranslation",
        "MLIRX86VectorToLLVMIRTranslation",
        "MLIRTargetLLVMIRExport",
        "MLIRToLLVMIRTranslationRegistration",
        "MLIRTargetLLVMIRImport",
        "MLIRFromLLVMIRTranslationRegistration",
        "MLIRTargetLLVM",
        "MLIRNVVMTarget",
        "MLIRROCDLTarget",
        "MLIRLspServerSupportLib",
        "MLIRLspServerLib",
        "MLIROptLib",
        "MLIRQueryLib",
        "MLIRReduceLib",
        "MLIRTblgenLib",
        "MLIRTranslateLib",
        "MLIRPDLLAST",
        "MLIRPDLLCodeGen",
        "MLIRPDLLODS",
        "MLIRPluginsLib",
        "MLIRTransformUtils",
        "MLIRTransforms",
        "MLIRExecutionEngineUtils",
        "MLIRExecutionEngine",
        "MLIRJitRunner",
        "mlir_float16_utils",
        "MLIRSparseTensorRuntime",
        "mlir_c_runner_utils",
        "mlir_runner_utils",
        "mlir_async_runtime",
        "mlir_arm_sme_abi_stubs",
        "mlir_arm_runner_utils",
        "MLIRCAPIDebug",
        "MLIRCAPIAMDGPU",
        "MLIRCAPIArith",
        "MLIRCAPIAsync",
        "MLIRCAPIControlFlow",
        "MLIRCAPIMath",
        "MLIRCAPIMemRef",
        "MLIRCAPIGPU",
        "MLIRCAPIIRDL",
        "MLIRCAPILLVM",
        "MLIRCAPILinalg",
        "MLIRCAPIMLProgram",
        "MLIRCAPINVGPU",
        "MLIRCAPINVVM",
        "MLIRCAPIROCDL",
        "MLIRCAPISCF",
        "MLIRCAPIShape",
        "MLIRCAPISparseTensor",
        "MLIRCAPIFunc",
        "MLIRCAPISPIRV",
        "MLIRCAPITensor",
        "MLIRCAPITransformDialect",
        "MLIRCAPITransformDialectTransforms",
        "MLIRCAPIQuant",
        "MLIRCAPIOpenMP",
        "MLIRCAPIPDL",
        "MLIRCAPIVector",
        "MLIRCAPIConversion",
        "MLIRCAPIInterfaces",
        "MLIRCAPIIR",
        "MLIRCAPIRegisterEverything",
        "MLIRCAPITransforms",
        "MLIRCAPITarget",
        "MLIRCAPIExecutionEngine",
        "MLIRTestAnalysis",
        "MLIRTestConvertToSPIRV",
        "MLIRTestFuncToLLVM",
        "MLIRTestMathToVCIX",
        "MLIRTestOneToNTypeConversionPass",
        "MLIRTestVectorToSPIRV",
        "MLIRAffineTransformsTestPasses",
        "MLIRArithTestPasses",
        "MLIRArmNeonTestPasses",
        "MLIRArmSMETestPasses",
        "MLIRBufferizationTestPasses",
        "MLIRControlFlowTestPasses",
        "MLIRDLTITestPasses",
        "MLIRFuncTestPasses",
        "MLIRGPUTestPasses",
        "MLIRLinalgTestPasses",
        "MLIRLLVMTestPasses",
        "MLIRMathTestPasses",
        "MLIRMemRefTestPasses",
        "MLIRMeshTest",
        "MLIRNVGPUTestPasses",
        "MLIRSCFTestPasses",
        "MLIRShapeTestPasses",
        "MLIRSPIRVTestPasses",
        "MLIRTensorTestPasses",
        "MLIRTestDialect",
        "MLIRTestFromLLVMIRTranslation",
        "MLIRTestToLLVMIRTranslation",
        "MLIRTestDynDialect",
        "MLIRTosaTestPasses",
        "MLIRTestTransformDialect",
        "MLIRVectorTestPasses",
        "MLIRLoopLikeInterfaceTestPasses",
        "MLIRTilingInterfaceTestPasses",
        "MLIRTestIR",
        "MLIRTestPass",
        "MLIRTestReducer",
        "MLIRTestRewrite",
        "MLIRTestPDLL",
        "MLIRTestTransforms",
        "MLIRMlirOptMain"
    }
end

--- module

function main()
    return constants
end
